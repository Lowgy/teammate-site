import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useState } from 'react';
import { trpc } from '../utils/trpc';
import { Team } from '@prisma/client';
import 'react-date-range/dist/styles.css';
import 'react-date-range/dist/theme/default.css';

import Select from 'react-select';
import { DateRange } from 'react-date-range';

const Home: NextPage = () => {
  const [teams, setTeams] = useState<Team[]>([]);
  const [firstSelectedTeam, setFirstSelectedTeam] = useState<Team | null>(null);
  const [secondSelectedTeam, setSecondSelectedTeam] = useState<Team | null>(
    null
  );
  const [dateRange, setDateRange] = useState([
    {
      startDate: new Date(),
      endDate: new Date(),
      key: 'selection',
    },
  ]);

  const { data: scraperData, isLoading } = trpc.useQuery(['teams.getAll'], {
    onSuccess(data) {
      setTeams(data);
    },
  });

  const customStyles = {
    control: (base: any, state: any) => ({
      ...base,
      textColor: 'black',
      backgroundColor: state.isDisabled ? 'lightgray' : 'white',
    }),
  };

  const handleChange = (type: string, selectedOption: any) => {
    if (type === 'first') {
      setFirstSelectedTeam(selectedOption);
    } else {
      setSecondSelectedTeam(selectedOption);
    }
  };

  const handleDateChange = (item: any) => {
    setDateRange([item.selection]);
  };

  if (!scraperData || isLoading) return <p>Loading.....</p>;

  return (
    <>
      <Head>
        <title>TeamMate - The Ultimate Sport Schedule Viewer</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-auto my-12 max-w-7xl">
        <div className="flex justify-between">
          <h1 className="text-2xl font-semibold text-white">TeamMate</h1>
        </div>
        <div className="mt-4 flex space-x-4">
          <Select
            className="w-1/2"
            value={firstSelectedTeam}
            formatOptionLabel={(team: Team) => (
              <div className="flex items-center">
                <span>{team.name}</span>
                <Image
                  src={team.logo}
                  className="ml-2"
                  height={35}
                  width={35}
                  alt={`${team.name} Logo`}
                />
              </div>
            )}
            getOptionLabel={(team: Team) => team.name}
            getOptionValue={(team: Team) => team.name}
            options={teams}
            styles={customStyles}
            onChange={(selectedOption) => handleChange('first', selectedOption)}
          />
          <Select
            className="w-1/2"
            value={secondSelectedTeam}
            formatOptionLabel={(team: Team) => (
              <div className="flex items-center">
                <span>{team.name}</span>
                <Image
                  src={team.logo}
                  className="ml-2"
                  height={35}
                  width={35}
                  alt={`${team.name} Logo`}
                />
              </div>
            )}
            getOptionLabel={(team: Team) => team.name}
            getOptionValue={(team: Team) => team.name}
            options={teams}
            styles={customStyles}
            isDisabled={!firstSelectedTeam}
            onChange={(selectedOption) =>
              handleChange('second', selectedOption)
            }
          />
          {secondSelectedTeam ? (
            <DateRange
              editableDateInputs={true}
              onChange={handleDateChange}
              ranges={dateRange}
              moveRangeOnFirstSelection={false}
            />
          ) : (
            <Select
              placeholder="Select a date range"
              className="w-1/3"
              styles={customStyles}
              isDisabled={!secondSelectedTeam}
            />
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
